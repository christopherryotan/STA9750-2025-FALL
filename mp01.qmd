---
title: "Mini-Project #1 - Netflix Top 10"
format:
  html:
    css: styles.css
    code-fold: false
    code-tools: true
    code-summary: "Show code"
execute:
  warning: true
  message: true
---

## Objective

For this assignment, we are given the task of analyzing Netflix's Global Top 10 and Country Top 10 datasets. Below we will acquire, clean, and explore the data, then answer exploratory questions and draft press releases.

## Acquire Data

```{r}
if (!dir.exists(file.path("data", "mp01"))) {
  dir.create(file.path("data", "mp01"), showWarnings = FALSE, recursive = TRUE)
}

GLOBAL_TOP_10_FILENAME  <- file.path("data", "mp01", "global_top10_alltime.csv")
COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.csv")

if (!file.exists(GLOBAL_TOP_10_FILENAME)) {
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv",
                destfile = GLOBAL_TOP_10_FILENAME)
}
if (!file.exists(COUNTRY_TOP_10_FILENAME)) {
  download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv",
                destfile = COUNTRY_TOP_10_FILENAME)
}
```

## Data Import
```{r message=FALSE, warning=FALSE}
if (!require("tidyverse")) install.packages("tidyverse")
library(readr)
library(dplyr)
library(stringr)
library(DT)
```

```{r}
GLOBAL_TOP_10 <- read_tsv(GLOBAL_TOP_10_FILENAME)
COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME)
```

## Data Cleaning/Reformatting
```{r}
GLOBAL_TOP_10 <- GLOBAL_TOP_10 |>
mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))
```

```{r}
COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME,
                          na = "N/A")
```

## Intial Data Exploration
```{r}
library(DT)
GLOBAL_TOP_10 |> 
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE))
```

```{r}
library(stringr)
format_titles <- function(df){
    colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
    df
}

GLOBAL_TOP_10 |> 
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

```{r}
GLOBAL_TOP_10 |> 
    select(-season_title) |>
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

```{r}
GLOBAL_TOP_10 |> 
    mutate(`runtime_(minutes)` = round(60 * runtime)) |>
    select(-season_title, 
           -runtime) |>
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

## Exploratory Questions
### 1. How many different countries does Netflix operate in? 
```{r}
countries <- COUNTRY_TOP_10 |> 
  summarise(num_countries = n_distinct(country_name))
```
Netflix operates in **`r countries`** countries.

### 2. Which non-English-language film has spent the most cumulative weeks in the global top 10? How many weeks did it spend?
```{r}
nonEnglish <- GLOBAL_TOP_10 |> 
  filter(category == "Films (Non-English)") |>
  arrange(desc(cumulative_weeks_in_top_10)) |>
  slice(1) |>
  select(show_title, cumulative_weeks_in_top_10)
```
The non-English film with the most cumulative weeks in the global Top 10 is **`r nonEnglish$show_title`**, 
with **`r nonEnglish$cumulative_weeks_in_top_10`** weeks.

### 3. What is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10? How long is it in minutes?
```{r}
longest <- GLOBAL_TOP_10 |>
  filter(str_detect(category, "Films")) |>
  mutate(runtime_minutes = runtime * 60) |>
  arrange(desc(runtime_minutes)) |> 
  slice(1) |>
  select(show_title, runtime_minutes)
```
The longest film to have ever appeared in the Netflix global Top 10 was **`r longest$show_title`** with **`r round(longest$runtime_minutes)`** minutes.

### 4. For each of the four categories, what program has the most total hours of global viewership?
```{r}
top_by_category <- GLOBAL_TOP_10 |>
  group_by(category, show_title) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = "drop_last") |>
  slice_max(order_by = total_hours, n = 1, with_ties = FALSE) |>
  ungroup()

```
The programs with the most total hours of global viewership are **`r top_by_category$show_title[top_by_category$category == "Films (English)"]`** for English films, **`r top_by_category$show_title[top_by_category$category == "Films (Non-English)"]`** for non-English films, **`r top_by_category$show_title[top_by_category$category == "TV (English)"]`** for English TV, and **`r top_by_category$show_title[top_by_category$category == "TV (Non-English)"]`** for non-English TV.

### 5. Which TV show had the longest run in a country’s Top 10? How long was this run and in what country did it occur?
```{r}
longest_tv_run <- COUNTRY_TOP_10 |>
  filter(category == "TV") |>
  group_by(country_name, show_title) |>
  summarise(longest_run = max(cumulative_weeks_in_top_10, na.rm = TRUE), .groups = "drop") |>
  arrange(desc(longest_run)) |>
  slice(1)   
```
The TV show that had the longest run in a country’s Top 10 is **`r longest_tv_run$show_title`**, which appeared in **`r longest_tv_run$country_name`**  for **`r longest_tv_run$longest_run`** weeks.

### 6. Netflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?
```{r}
dropped_country <- COUNTRY_TOP_10 |>
  group_by(country_name) |>
  summarise(max_week = max(week, na.rm = TRUE)) |>
  arrange(max_week) |>
  slice(1)
```
The country where Netflix ceased operations the earliest is **`r dropped_country$country_name`**, in the week of **`r dropped_country$max_week`**.

### 7. What is the total viewership of the TV show Squid Game? Note that there are three seasons total and we are looking for the total number of hours watched across all seasons.
```{r}
squid_game_viewership <- GLOBAL_TOP_10 |>
  filter(str_detect(show_title, "Squid Game")) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE))
```
The total viewership of the TV show *Squid Game* across all seasons is **`r scales::comma(squid_game_viewership$total_hours)`** hours.

### 8. The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021?
```{r}
red_notice_views_2021 <- GLOBAL_TOP_10 |>
  filter(show_title == "Red Notice", year(week) == 2021) |>
  summarise(total_views = sum(weekly_hours_viewed, na.rm = TRUE) / ((1 + 58 / 60))) |>
  mutate(total_views = round(total_views))
```
The movie *Red Notice* received approximately **`r scales::comma(red_notice_views_2021$total_views)`** views in 2021.

### 9. How many Films reached Number 1 in the US but did not originally debut there? 
```{r}
library(dplyr)
library(stringr)

us_films <- COUNTRY_TOP_10 |>
  filter(country_name == "United States",
         str_starts(category, "Films")) |>
  group_by(show_title) |>
  summarise(
    debut_week = min(week, na.rm = TRUE),
    debut_rank = weekly_rank[which.min(week)],
    hit_one = any(weekly_rank == 1, na.rm = TRUE),
    last_week_one = if (any(weekly_rank == 1, na.rm = TRUE))
      max(week[weekly_rank == 1], na.rm = TRUE)
    else as.Date(NA),
    .groups = "drop"
  )

climbers <- us_films |>
  filter(hit_one, debut_rank > 1) |>
  arrange(desc(last_week_one))

films_count <- nrow(climbers)
latest_row  <- slice_head(climbers, n = 1)
latest_film <- latest_row$show_title
latest_when <- latest_row$last_week_one

```
A total of **`r films_count`** films reached Number 1 in the United States **after** debuting below the top spot.  
The most recent film to do this was **`r latest_film`**, which reached **Number 1** on **`r latest_when`**.

### 10. Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?
```{r}
library(dplyr)
library(stringr)

tv_debut_spread <- COUNTRY_TOP_10 |>
  filter(str_starts(category, "TV")) |>
  group_by(show_title, season_title) |>
  mutate(debut_week = min(week, na.rm = TRUE)) |>
  ungroup() |>
  filter(week == debut_week) |>
  group_by(show_title, season_title) |>
  summarise(
    countries = n_distinct(country_name),
    debut_week = first(debut_week),
    .groups = "drop"
  ) |>
  slice_max(countries, n = 1, with_ties = FALSE)

top_title     <- tv_debut_spread$show_title
top_season    <- tv_debut_spread$season_title
top_countries <- tv_debut_spread$countries
top_week      <- tv_debut_spread$debut_week
```
The TV show/season that hit the Top 10 in the most countries in its debut week was **`r top_title` — `r top_season`**, charting in **`r top_countries`** countries during the week of **`r top_week`**.

## Press Releases

```{r}
# Global table uses "TV (English)" for the category.
st_global <- GLOBAL_TOP_10 |>
  filter(category == "TV (English)",
         str_detect(show_title, regex("^Stranger Things$", ignore_case = TRUE)))

st_total_hours <- sum(st_global$weekly_hours_viewed, na.rm = TRUE)  # FACT 1
st_total_weeks <- nrow(st_global)                                   # FACT 2

# Country table uses "TV" (no language tag). Count unique countries.
st_countries <- COUNTRY_TOP_10 |>
  filter(category == "TV",
         str_detect(show_title, regex("^Stranger Things$", ignore_case = TRUE)))

st_num_countries <- st_countries |>
  distinct(country_name) |>
  nrow()                                                            # FACT 3

# Compare against other English-language TV series by total hours viewed
tv_eng_totals <- GLOBAL_TOP_10 |>
  filter(category == "TV (English)") |>
  group_by(show_title) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = "drop") |>
  arrange(desc(total_hours))

st_rank <- tv_eng_totals |>
  mutate(rank = dense_rank(desc(total_hours))) |>
  filter(show_title == "Stranger Things") |>
  pull(rank)

second_place  <- tv_eng_totals |> slice(2)
second_show   <- second_place$show_title
second_hours  <- second_place$total_hours
```

### Stranger Things Season 5: The Resurgence of a Legacy
Netflix’s *Stranger Things* remains a once-in-a-generation hit as many await its final release in November 2025. Across its first four seasons, the series has amassed **`r format(st_total_hours, big.mark = ",")`** hours viewed globally, spent **`r st_total_weeks`** weeks in the **Global Top 10**, and charted in **`r st_num_countries`** countries. Among English-language TV series by total hours viewed, it ranks **#`r st_rank`**, ahead of hits like **`r second_show`** (**`r format(second_hours, big.mark = ",")`** hours), underscoring extraordinary staying power and worldwide appeal ahead of the final season.


```{r}
# Identify Hindi-language titles 
hindi_global <- GLOBAL_TOP_10 |>
  filter(category %in% c("Films (Non-English)", "TV (Non-English)"),
         str_detect(show_title, regex("Hindi|India", ignore_case = TRUE)))

# Aggregate total hours viewed globally 
hindi_total_hours <- sum(hindi_global$weekly_hours_viewed, na.rm = TRUE)

# Find top Hindi titles by global hours viewed
top_hindi <- hindi_global |>
  group_by(show_title) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = "drop") |>
  arrange(desc(total_hours)) |>
  slice_head(n = 3)

top_hindi_1  <- top_hindi$show_title[1]
top_hindi_1h <- top_hindi$total_hours[1]
top_hindi_2  <- top_hindi$show_title[2]
top_hindi_2h <- top_hindi$total_hours[2]
top_hindi_3  <- top_hindi$show_title[3]
top_hindi_3h <- top_hindi$total_hours[3]

# Estimate the number of unique Hindi titles appearing in the dataset
hindi_title_count <- n_distinct(hindi_global$show_title)

# Estimate number of Hindi entries (viewing records)
hindi_records <- nrow(hindi_global)

```

### Netflix Celebrates Blockbuster Growth in India
India’s love for local storytelling continues to fuel Netflix’s remarkable rise in South Asia. Over the past two years, Hindi-language films and series have generated more than **`r format(hindi_total_hours, big.mark = ",")`** hours viewed worldwide. Among these titles, hits like **`r top_hindi_1`** (**`r format(top_hindi_1h, big.mark = ",")`** hours), **`r top_hindi_2`** (**`r format(top_hindi_2h, big.mark = ",")`** hours), and **`r top_hindi_3`** (**`r format(top_hindi_3h, big.mark = ",")`** hours) have captivated audiences at home as well as overseas. With over **`r hindi_title_count`** Hindi-language titles appearing in the global Top 10 across **`r hindi_records`** charting weeks, Netflix continues to deepen its investment in local content — cementing India as one of its fastest-growing creative and consumer markets.


```{r}
jp_global <- GLOBAL_TOP_10 |> 
  filter(category %in% c("Films (Non-English)", "TV (Non-English)")) |> 
  filter(str_detect(show_title, regex("Japan|Japanese|の|アニメ|ドラマ|Tokyo|Naruto|One Piece|Jujutsu Kaisen|Demon Slayer|Spirited Away|Ghibli|Boruto", ignore_case = TRUE)))

# Compute totals
jp_total_hours <- sum(jp_global$weekly_hours_viewed, na.rm = TRUE)
jp_title_count <- n_distinct(jp_global$show_title)
jp_records <- nrow(jp_global)

# Find top 3 Japanese titles by total hours viewed
top_jp <- jp_global |> 
  group_by(show_title) |> 
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = "drop") |> 
  arrange(desc(total_hours)) |> 
  slice_head(n = 3)

top_jp_1  <- top_jp$show_title[1]
top_jp_1h <- top_jp$total_hours[1]
top_jp_2  <- top_jp$show_title[2]
top_jp_2h <- top_jp$total_hours[2]
top_jp_3  <- top_jp$show_title[3]
top_jp_3h <- top_jp$total_hours[3]

```

### The Global Appeal of Japanese Storytelling  
Japanese films and series are finding fans in every corner of the world. From touching dramas to breathtaking anime, stories from Japan continue to draw in global audiences with their emotion, imagination, and artistry. Over the past few years, viewers have spent more than **`r format(jp_total_hours, big.mark = ",")`** hours watching Japanese titles on Netflix. Fan favorites like **`r top_jp_1`** (**`r format(top_jp_1h, big.mark = ",")`** hours), **`r top_jp_2`** (**`r format(top_jp_2h, big.mark = ",")`** hours), and **`r top_jp_3`** (**`r format(top_jp_3h, big.mark = ",")`** hours) continue to reach new audiences and showcase the creativity of Japanese storytellers. With more than **`r jp_title_count`** Japanese titles appearing in the Top 10 across **`r jp_records`** charting weeks, Netflix’s collaboration with Japan’s creators is helping share their stories with millions of viewers around the world.


